import * as path from "@std/path";

const OUTPUT_PATH = path.resolve("lib", "all_values.ts");

const props = [
  "exchCode",
  "micCode",
  "currency",
  "marketSecDes",
  "securityType",
  "securityType2",
  "stateCode",
];

console.log("Fetching mapping values: " + props.join(", "));
const mapped = await Promise.all(
  props.map(async (prop) => {
    const response = await fetch(
      "https://api.openfigi.com/v3/mapping/values/" + prop,
    );
    if (!response.ok) {
      throw new Error(
        `Error fetching mapping values: HTTP ${response.status}: ${response.statusText}; ${await response
          .text()}`,
      );
    }
    const data = await response.json();
    return { prop, values: data.values };
  }),
);

let out = `
/**
 * This file is auto-generated by \`scripts/retrieve.ts\`
 * Do not edit it manually.
 */
`;

for (const { prop, values } of mapped) {
  out += `
/**
 * @see {@link https://api.openfigi.com/v3/mapping/values/${prop} | List of \`${prop}\` values}
 */
export const ${prop}Values = ${JSON.stringify(values, null, 2)} as const;
export type ${
    prop[0].toUpperCase() + prop.slice(1)
  }Value = typeof ${prop}Values[number];
`;
}

await Deno.writeTextFile(OUTPUT_PATH, out);
console.log("Wrote " + OUTPUT_PATH);
